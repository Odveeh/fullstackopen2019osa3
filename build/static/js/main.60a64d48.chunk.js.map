{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["urli","newPerson","console","log","axios","post","id","deleteURL","delete","get","changedData","replaceURL","put","Persons","props","peopleToShow","map","person","key","name","number","onClick","deleteContact","Filter","value","filter","onChange","handleFilterChange","Notification","message","className","Error","PersonForm","onSubmit","addNewPerson","newName","handleNameChange","newNumber","handleNumberChange","type","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","notMessage","setNotMessage","errorMessage","setErrMessage","useEffect","personService","then","response","data","subStringCheck","string","substring","includes","event","target","preventDefault","personName","mappedNames","window","confirm","indeksi","indexOf","personID","result1","result2","setTimeout","catch","error","status","concat","response1","response2","err","result","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60a64d48.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst urli = '/api/persons'\r\n\r\nconst addPerson = newPerson => {\r\n    console.log(\"axios post urli: \", urli);\r\n    return axios.post(urli, newPerson);\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const deleteURL = urli + `/${id}`;\r\n    console.log(\"axios delete urli:\", urli + `/${id}`);\r\n    return axios.delete(deleteURL);\r\n}\r\n\r\nconst returnAll = () => {\r\n    console.log(\"axios get\")\r\n    return axios.get(urli);\r\n}\r\n\r\nconst replacePerson = (id, changedData) => {\r\n    const replaceURL = urli + `/${id}`;\r\n    console.log(\"axios replace\")\r\n    return axios.put(replaceURL, changedData);\r\n\r\n}\r\n\r\nexport default {\r\n    addPerson,\r\n    deletePerson,\r\n    returnAll,\r\n    replacePerson\r\n};","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios'\n\nimport personService from './services/persons'\n\nconst Persons = (props) => {\n\n\n\n  return(\n    <div>\n      <h2>Numbers</h2>\n      {props.peopleToShow().map(person => <div key={person.name}> {person.name} {person.number} <button onClick={() => props.deleteContact(person.id, person.name)}> delete this nephew</button> </div>)}\n    </div>\n    \n  )\n\n}\n\nconst Filter = (props) => {\n\n  return(\n    <div>\n      filter shown with: \n       <input  value={props.filter} onChange={props.handleFilterChange}/>\n    </div>\n    \n  )\n}\n\n\nconst Notification = (props) => {\n  if(props.message === null){\n    return null;\n  } \n  return (\n    <div className=\"notifikaatio\">\n      {props.message}\n    </div>\n  )\n}\nconst Error = (props) => {\n  if(props.message === null){\n    return null;\n  } \n  return (\n    <div className=\"errori\">\n      {props.message}\n    </div>\n  )\n}\n\n\nconst PersonForm = (props) => {\n  return(\n    <div>\n     <h2> Add a new </h2>\n      <form onSubmit={props.addNewPerson}>\n        <div>\n          name: <input \n          value={props.newName}\n          onChange={props.handleNameChange}\n           />\n        </div>\n        <div>number: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n    \n  )\n\n}\n\n/*\nname: 'Arto Hellas', number: '040-123456' },\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' \n\n*/\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setNewFilter] = useState('');\n  const [ notMessage, setNotMessage] = useState(null);\n  const [ errorMessage, setErrMessage] = useState(null);\n\n/*\n  useEffect(() => {\n    console.log(\"efekti\");\n    axios\n      .get('http://localhost:3001/persons')\n      .then(response => {\n        console.log(\"promise fulfilled!\")\n        console.log(\"response data:\", response.data);\n        setPersons(response.data);\n      })\n\n  }, [])\n*/\n\n  useEffect(() => {\n    console.log(\"efekti\");\n    personService.returnAll()\n      .then(response => {\n        console.log(\"promise fulfilled!\")\n        console.log(\"response data:\", response.data);\n        setPersons(response.data);\n      })\n\n  }, [])\n\n\n  const deleteContact = (id, name) => {\n\n    const result = window.confirm(`rly wanna delete dis badboi right here? (${name})`);\n\n    if(result){\n      personService.deletePerson(id)\n      .then(response1 => {personService.returnAll()\n      .then(response2 => {\n        console.log(\"responsedata of returnAll:\", response2.data)\n        setPersons(response2.data);\n        setNotMessage(`${name} deleted from phonebook!`);\n        setTimeout(() => {setNotMessage(null)}, 2000);\n      })\n    }).catch(err => {\n      console.log(\"deletointi epÃ¤oinnistui: \", err);\n\n      if(err.response.status === 404){\n        setErrMessage(\"Resource not found (404). Could not delete contact because it has already been deleted!\")\n        setTimeout(() => {setErrMessage(null)}, 2000);\n      }\n    }).then(result => {\n      personService.returnAll()\n      .then(response => {\n        setPersons(response.data);\n        console.log(\"local contacts synced with server\");\n      }\n      )\n    })\n    }\n \n\n  }\n    \n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const getContactsFromServer = () => {\n    personService.returnAll()\n      .then(response => {\n        console.log(\"kaikki kontaktit: \", response.data)\n        setPersons(response.data);\n        return response.data;\n      }  \n      )\n  }\n\n  const addNewPerson = (event) => {\n    event.preventDefault();\n\n    const personName = {name: newName, number: newNumber};\n    const mappedNames = persons.map(person => person.name);\n    console.log(\"mapitetutnimet: \", mappedNames);\n\n    if(mappedNames.includes(personName.name)){\n      console.log(\"nimi on jo listoilla!\");\n      //window.alert(`${personName.name} is already added to phonenook`)\n\n      const result = window.confirm(`already added to the phonebook, replace old number with new one?`)\n\n      if(result){\n        const indeksi = mappedNames.indexOf(personName.name) + 1;\n        console.log(\"oikea indeksi:\", persons[indeksi-1].id);\n        const personID = persons[indeksi-1].id;\n        personService.replacePerson(personID, personName)\n        .then(result1 => personService.returnAll()\n        .then(result2 => {\n          setPersons(result2.data)\n          setNotMessage(`${personName.name}'s phonenumber updated!`);\n          setTimeout(() => {setNotMessage(null)}, 2000);\n        }))\n        .catch(error => {\n          console.log(\"numeron muutos epÃ¤onnistui!\", error.response.status);\n          if(error.response.status === 404){\n            setErrMessage(\"Resource not found on the server (404). Can't change number because contact has already been deleted!\")\n            setTimeout(() => {setErrMessage(null)}, 5000);\n          }\n\n        });\n      }\n\n    } else {\n      \n      console.log(\"axios palvelin POST...\");\n      personService.addPerson(personName)\n        .then(response => {\n          console.log(\"server response: \", response);\n          console.log(\"addperson data:\", response.data);\n          personName.id = response.data.id;\n          setPersons(persons.concat(personName));\n          setNotMessage(`${personName.name} added to the phonebook!`);\n          setTimeout(() => {setNotMessage(null)}, 2000);\n        })\n        .catch(error => {\n          console.log(\"error henkilÃ¶n lisÃ¤Ã¤misessÃ¤\", error.response.data.error);\n          setErrMessage(error.response.data.error);\n          setTimeout(() => {setErrMessage(null)}, 2000);\n        })\n      \n    }\n\n    setNewName('');\n    setNewNumber('');\n  }\n\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value);\n    console.log(\"filtteri:\", filter);\n  }\n\n  const subStringCheck = (string, substring) => {\n\n    if(string.includes(substring)){\n      console.log(\"string:\", string, \"substring:\", substring)\n      console.log(\"substring inside string\");\n      return true;\n    } else {\n      console.log(\"no substring inside string\");\n      return false;\n    }\n\n  }\n\n  const peopleToShow = () => {\n\n    if(filter === ''){\n      return persons;\n    } else {\n      \n      console.log(\"filltterÃ¶inti: \", persons.filter(person => subStringCheck(person.name, filter)))\n      const filteredPeople = persons.filter(person => subStringCheck(person.name, filter)) \n      return filteredPeople;   \n    }\n    \n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notMessage} />\n      <Error message={errorMessage} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <PersonForm addNewPerson={addNewPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <Persons peopleToShow={peopleToShow} deleteContact={deleteContact} />\n    </div>\n  )\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}